diff --git a/node_modules/react-native/Libraries/Blob/RCTBlobManager.mm b/node_modules/react-native/Libraries/Blob/RCTBlobManager.mm
index 567e16f..e5968f3 100755
--- a/node_modules/react-native/Libraries/Blob/RCTBlobManager.mm
+++ b/node_modules/react-native/Libraries/Blob/RCTBlobManager.mm
@@ -9,7 +9,7 @@
 
 #import <mutex>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTConvert.h>
 #import <React/RCTNetworking.h>
 #import <React/RCTUtils.h>
diff --git a/node_modules/react-native/Libraries/Blob/RCTFileReaderModule.mm b/node_modules/react-native/Libraries/Blob/RCTFileReaderModule.mm
index e834c61..1c744d2 100644
--- a/node_modules/react-native/Libraries/Blob/RCTFileReaderModule.mm
+++ b/node_modules/react-native/Libraries/Blob/RCTFileReaderModule.mm
@@ -8,7 +8,7 @@
 
 #import <React/RCTFileReaderModule.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTBridge.h>
 #import <React/RCTConvert.h>
 
diff --git a/node_modules/react-native/Libraries/Blob/React-RCTBlob.podspec b/node_modules/react-native/Libraries/Blob/React-RCTBlob.podspec
index 15a46df..dc131ab 100644
--- a/node_modules/react-native/Libraries/Blob/React-RCTBlob.podspec
+++ b/node_modules/react-native/Libraries/Blob/React-RCTBlob.podspec
@@ -35,11 +35,11 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++14",
-                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\""
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/ReactCodegen/react/renderer/components\""
                              }
 
   s.dependency "RCT-Folly", folly_version
-  s.dependency "React-Codegen", version
+  s.dependency "ReactCodegen", version
   s.dependency "ReactCommon/turbomodule/core", version
   s.dependency "React-jsi", version
   s.dependency "React-Core/RCTBlobHeaders", version
diff --git a/node_modules/react-native/Libraries/Image/RCTImageEditingManager.mm b/node_modules/react-native/Libraries/Image/RCTImageEditingManager.mm
index 1f75fe3..d4337b2 100644
--- a/node_modules/react-native/Libraries/Image/RCTImageEditingManager.mm
+++ b/node_modules/react-native/Libraries/Image/RCTImageEditingManager.mm
@@ -7,7 +7,7 @@
 
 #import <React/RCTImageEditingManager.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTConvert.h>
 #import <React/RCTImageLoader.h>
 #import <React/RCTImageStoreManager.h>
diff --git a/node_modules/react-native/Libraries/Image/RCTImageLoader.mm b/node_modules/react-native/Libraries/Image/RCTImageLoader.mm
index d0e3d9c..5fdb7f3 100644
--- a/node_modules/react-native/Libraries/Image/RCTImageLoader.mm
+++ b/node_modules/react-native/Libraries/Image/RCTImageLoader.mm
@@ -11,7 +11,7 @@
 
 #import <ImageIO/ImageIO.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTConvert.h>
 #import <React/RCTDefines.h>
 #import <React/RCTImageCache.h>
diff --git a/node_modules/react-native/Libraries/Image/RCTImageStoreManager.mm b/node_modules/react-native/Libraries/Image/RCTImageStoreManager.mm
index c62ad09..3f64716 100644
--- a/node_modules/react-native/Libraries/Image/RCTImageStoreManager.mm
+++ b/node_modules/react-native/Libraries/Image/RCTImageStoreManager.mm
@@ -10,7 +10,7 @@
 #import <atomic>
 #import <memory>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <ImageIO/ImageIO.h>
 #import <MobileCoreServices/UTType.h>
 #import <React/RCTAssert.h>
diff --git a/node_modules/react-native/Libraries/Image/React-RCTImage.podspec b/node_modules/react-native/Libraries/Image/React-RCTImage.podspec
index bdbd33d..5497085 100644
--- a/node_modules/react-native/Libraries/Image/React-RCTImage.podspec
+++ b/node_modules/react-native/Libraries/Image/React-RCTImage.podspec
@@ -36,11 +36,11 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++14",
-                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\""
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/ReactCodegen/react/renderer/components\""
                              }
 
   s.dependency "RCT-Folly", folly_version
-  s.dependency "React-Codegen", version
+  s.dependency "ReactCodegen", version
   s.dependency "RCTTypeSafety", version
   s.dependency "ReactCommon/turbomodule/core", version
   s.dependency "React-jsi", version
diff --git a/node_modules/react-native/Libraries/LinkingIOS/RCTLinkingManager.mm b/node_modules/react-native/Libraries/LinkingIOS/RCTLinkingManager.mm
index dc45866..79495fe 100644
--- a/node_modules/react-native/Libraries/LinkingIOS/RCTLinkingManager.mm
+++ b/node_modules/react-native/Libraries/LinkingIOS/RCTLinkingManager.mm
@@ -7,7 +7,7 @@
 
 #import <React/RCTLinkingManager.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTBridge.h>
 #import <React/RCTUtils.h>
 #import <React/RCTLog.h>
diff --git a/node_modules/react-native/Libraries/LinkingIOS/React-RCTLinking.podspec b/node_modules/react-native/Libraries/LinkingIOS/React-RCTLinking.podspec
index a50ce13..10fdcc7 100644
--- a/node_modules/react-native/Libraries/LinkingIOS/React-RCTLinking.podspec
+++ b/node_modules/react-native/Libraries/LinkingIOS/React-RCTLinking.podspec
@@ -36,10 +36,10 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++14",
-                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\""
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/ReactCodegen/react/renderer/components\""
                              }
 
-  s.dependency "React-Codegen", version
+  s.dependency "ReactCodegen", version
   s.dependency "React-Core/RCTLinkingHeaders", version
   s.dependency "ReactCommon/turbomodule/core", version
   s.dependency "React-jsi", version
diff --git a/node_modules/react-native/Libraries/NativeAnimation/RCTNativeAnimatedModule.mm b/node_modules/react-native/Libraries/NativeAnimation/RCTNativeAnimatedModule.mm
index 534587b..bbce996 100644
--- a/node_modules/react-native/Libraries/NativeAnimation/RCTNativeAnimatedModule.mm
+++ b/node_modules/react-native/Libraries/NativeAnimation/RCTNativeAnimatedModule.mm
@@ -5,7 +5,7 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTNativeAnimatedModule.h>
 #import <React/RCTNativeAnimatedNodesManager.h>
 #import <React/RCTLog.h>
diff --git a/node_modules/react-native/Libraries/NativeAnimation/RCTNativeAnimatedTurboModule.mm b/node_modules/react-native/Libraries/NativeAnimation/RCTNativeAnimatedTurboModule.mm
index e627475..afb414e 100644
--- a/node_modules/react-native/Libraries/NativeAnimation/RCTNativeAnimatedTurboModule.mm
+++ b/node_modules/react-native/Libraries/NativeAnimation/RCTNativeAnimatedTurboModule.mm
@@ -5,7 +5,7 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <RCTTypeSafety/RCTConvertHelpers.h>
 #import <React/RCTNativeAnimatedTurboModule.h>
 #import <React/RCTNativeAnimatedNodesManager.h>
diff --git a/node_modules/react-native/Libraries/NativeAnimation/React-RCTAnimation.podspec b/node_modules/react-native/Libraries/NativeAnimation/React-RCTAnimation.podspec
index 94af813..78c4daf 100644
--- a/node_modules/react-native/Libraries/NativeAnimation/React-RCTAnimation.podspec
+++ b/node_modules/react-native/Libraries/NativeAnimation/React-RCTAnimation.podspec
@@ -35,11 +35,11 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++14",
-                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\""
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/ReactCodegen/react/renderer/components\""
                              }
 
   s.dependency "RCT-Folly", folly_version
-  s.dependency "React-Codegen", version
+  s.dependency "ReactCodegen", version
   s.dependency "RCTTypeSafety", version
   s.dependency "ReactCommon/turbomodule/core", version
   s.dependency "React-jsi", version
diff --git a/node_modules/react-native/Libraries/Network/RCTNetworking.mm b/node_modules/react-native/Libraries/Network/RCTNetworking.mm
index c9004d6..3b7a34d 100644
--- a/node_modules/react-native/Libraries/Network/RCTNetworking.mm
+++ b/node_modules/react-native/Libraries/Network/RCTNetworking.mm
@@ -8,7 +8,7 @@
 
 #import <mutex>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTAssert.h>
 #import <React/RCTConvert.h>
 #import <React/RCTLog.h>
diff --git a/node_modules/react-native/Libraries/Network/React-RCTNetwork.podspec b/node_modules/react-native/Libraries/Network/React-RCTNetwork.podspec
index 06c3f16..ae57901 100644
--- a/node_modules/react-native/Libraries/Network/React-RCTNetwork.podspec
+++ b/node_modules/react-native/Libraries/Network/React-RCTNetwork.podspec
@@ -35,12 +35,12 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++14",
-                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\""
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/ReactCodegen/react/renderer/components\""
                              }
   s.frameworks             = "MobileCoreServices"
 
   s.dependency "RCT-Folly", folly_version
-  s.dependency "React-Codegen", version
+  s.dependency "ReactCodegen", version
   s.dependency "RCTTypeSafety", version
   s.dependency "ReactCommon/turbomodule/core", version
   s.dependency "React-jsi", version
diff --git a/node_modules/react-native/Libraries/PushNotificationIOS/RCTPushNotificationManager.mm b/node_modules/react-native/Libraries/PushNotificationIOS/RCTPushNotificationManager.mm
index a56a88e..2c7f8e4 100644
--- a/node_modules/react-native/Libraries/PushNotificationIOS/RCTPushNotificationManager.mm
+++ b/node_modules/react-native/Libraries/PushNotificationIOS/RCTPushNotificationManager.mm
@@ -9,7 +9,7 @@
 
 #import <UserNotifications/UserNotifications.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTBridge.h>
 #import <React/RCTConvert.h>
 #import <React/RCTUtils.h>
diff --git a/node_modules/react-native/Libraries/PushNotificationIOS/React-RCTPushNotification.podspec b/node_modules/react-native/Libraries/PushNotificationIOS/React-RCTPushNotification.podspec
index a23c9a9..4b8f6dc 100644
--- a/node_modules/react-native/Libraries/PushNotificationIOS/React-RCTPushNotification.podspec
+++ b/node_modules/react-native/Libraries/PushNotificationIOS/React-RCTPushNotification.podspec
@@ -36,11 +36,11 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++14",
-                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\""
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/ReactCodegen/react/renderer/components\""
                              }
   s.framework              = "UserNotifications"
 
-  s.dependency "React-Codegen", version
+  s.dependency "ReactCodegen", version
   s.dependency "RCTTypeSafety", version
   s.dependency "React-Core/RCTPushNotificationHeaders", version
   s.dependency "ReactCommon/turbomodule/core", version
diff --git a/node_modules/react-native/Libraries/Settings/RCTSettingsManager.mm b/node_modules/react-native/Libraries/Settings/RCTSettingsManager.mm
index 4badb60..acc57ef 100644
--- a/node_modules/react-native/Libraries/Settings/RCTSettingsManager.mm
+++ b/node_modules/react-native/Libraries/Settings/RCTSettingsManager.mm
@@ -7,7 +7,7 @@
 
 #import <React/RCTSettingsManager.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTBridge.h>
 #import <React/RCTConvert.h>
 #import <React/RCTEventDispatcherProtocol.h>
diff --git a/node_modules/react-native/Libraries/Settings/React-RCTSettings.podspec b/node_modules/react-native/Libraries/Settings/React-RCTSettings.podspec
index 2715eb9..ad08eb7 100644
--- a/node_modules/react-native/Libraries/Settings/React-RCTSettings.podspec
+++ b/node_modules/react-native/Libraries/Settings/React-RCTSettings.podspec
@@ -36,11 +36,11 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++14",
-                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\""
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/ReactCodegen/react/renderer/components\""
                              }
 
   s.dependency "RCT-Folly", folly_version
-  s.dependency "React-Codegen", version
+  s.dependency "ReactCodegen", version
   s.dependency "RCTTypeSafety", version
   s.dependency "ReactCommon/turbomodule/core", version
   s.dependency "React-jsi", version
diff --git a/node_modules/react-native/Libraries/Vibration/RCTVibration.mm b/node_modules/react-native/Libraries/Vibration/RCTVibration.mm
index 68e4669..384dfd8 100644
--- a/node_modules/react-native/Libraries/Vibration/RCTVibration.mm
+++ b/node_modules/react-native/Libraries/Vibration/RCTVibration.mm
@@ -8,7 +8,7 @@
 #import <React/RCTVibration.h>
 
 #import <AudioToolbox/AudioToolbox.h>
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTLog.h>
 
 #import "RCTVibrationPlugins.h"
diff --git a/node_modules/react-native/Libraries/Vibration/React-RCTVibration.podspec b/node_modules/react-native/Libraries/Vibration/React-RCTVibration.podspec
index 775a4f1..4d8ca13 100644
--- a/node_modules/react-native/Libraries/Vibration/React-RCTVibration.podspec
+++ b/node_modules/react-native/Libraries/Vibration/React-RCTVibration.podspec
@@ -36,12 +36,12 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++14",
-                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\""
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/ReactCodegen/react/renderer/components\""
                              }
   s.frameworks             = "AudioToolbox"
 
   s.dependency "RCT-Folly", folly_version
-  s.dependency "React-Codegen", version
+  s.dependency "ReactCodegen", version
   s.dependency "ReactCommon/turbomodule/core", version
   s.dependency "React-jsi", version
   s.dependency "React-Core/RCTVibrationHeaders", version
diff --git a/node_modules/react-native/React/CoreModules/RCTAccessibilityManager.mm b/node_modules/react-native/React/CoreModules/RCTAccessibilityManager.mm
index f7ee29c..7817a43 100644
--- a/node_modules/react-native/React/CoreModules/RCTAccessibilityManager.mm
+++ b/node_modules/react-native/React/CoreModules/RCTAccessibilityManager.mm
@@ -8,7 +8,7 @@
 #import "RCTAccessibilityManager.h"
 #import "RCTAccessibilityManager+Internal.h"
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTBridge.h>
 #import <React/RCTConvert.h>
 #import <React/RCTEventDispatcherProtocol.h>
diff --git a/node_modules/react-native/React/CoreModules/RCTActionSheetManager.mm b/node_modules/react-native/React/CoreModules/RCTActionSheetManager.mm
index ee3c7b6..351c01c 100644
--- a/node_modules/react-native/React/CoreModules/RCTActionSheetManager.mm
+++ b/node_modules/react-native/React/CoreModules/RCTActionSheetManager.mm
@@ -13,7 +13,7 @@
 #import <React/RCTUIManager.h>
 #import <React/RCTUtils.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <RCTTypeSafety/RCTConvertHelpers.h>
 
 #import "CoreModulesPlugins.h"
diff --git a/node_modules/react-native/React/CoreModules/RCTAlertManager.mm b/node_modules/react-native/React/CoreModules/RCTAlertManager.mm
index c4a1cde..39358f3 100644
--- a/node_modules/react-native/React/CoreModules/RCTAlertManager.mm
+++ b/node_modules/react-native/React/CoreModules/RCTAlertManager.mm
@@ -7,7 +7,7 @@
 
 #import "RCTAlertManager.h"
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <RCTTypeSafety/RCTConvertHelpers.h>
 #import <React/RCTAssert.h>
 #import <React/RCTConvert.h>
diff --git a/node_modules/react-native/React/CoreModules/RCTAppState.mm b/node_modules/react-native/React/CoreModules/RCTAppState.mm
index 5de33f4..58f18de 100644
--- a/node_modules/react-native/React/CoreModules/RCTAppState.mm
+++ b/node_modules/react-native/React/CoreModules/RCTAppState.mm
@@ -7,7 +7,7 @@
 
 #import "RCTAppState.h"
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTAssert.h>
 #import <React/RCTBridge.h>
 #import <React/RCTEventDispatcherProtocol.h>
diff --git a/node_modules/react-native/React/CoreModules/RCTAppearance.mm b/node_modules/react-native/React/CoreModules/RCTAppearance.mm
index 71259d4..e4f692d 100644
--- a/node_modules/react-native/React/CoreModules/RCTAppearance.mm
+++ b/node_modules/react-native/React/CoreModules/RCTAppearance.mm
@@ -7,7 +7,7 @@
 
 #import "RCTAppearance.h"
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTConstants.h>
 #import <React/RCTEventEmitter.h>
 
diff --git a/node_modules/react-native/React/CoreModules/RCTAsyncLocalStorage.mm b/node_modules/react-native/React/CoreModules/RCTAsyncLocalStorage.mm
index 326ea78..02eabb7 100644
--- a/node_modules/react-native/React/CoreModules/RCTAsyncLocalStorage.mm
+++ b/node_modules/react-native/React/CoreModules/RCTAsyncLocalStorage.mm
@@ -11,7 +11,7 @@
 
 #import <CommonCrypto/CommonCryptor.h>
 #import <CommonCrypto/CommonDigest.h>
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 
 #import <React/RCTConvert.h>
 #import <React/RCTLog.h>
diff --git a/node_modules/react-native/React/CoreModules/RCTClipboard.mm b/node_modules/react-native/React/CoreModules/RCTClipboard.mm
index 2dc098a..f30a660 100644
--- a/node_modules/react-native/React/CoreModules/RCTClipboard.mm
+++ b/node_modules/react-native/React/CoreModules/RCTClipboard.mm
@@ -7,7 +7,7 @@
 
 #import "RCTClipboard.h"
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <UIKit/UIKit.h>
 
 #import "CoreModulesPlugins.h"
diff --git a/node_modules/react-native/React/CoreModules/RCTDevLoadingView.mm b/node_modules/react-native/React/CoreModules/RCTDevLoadingView.mm
index 316c248..4fdceed 100644
--- a/node_modules/react-native/React/CoreModules/RCTDevLoadingView.mm
+++ b/node_modules/react-native/React/CoreModules/RCTDevLoadingView.mm
@@ -9,7 +9,7 @@
 
 #import <QuartzCore/QuartzCore.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTAppearance.h>
 #import <React/RCTBridge.h>
 #import <React/RCTConvert.h>
diff --git a/node_modules/react-native/React/CoreModules/RCTDevMenu.mm b/node_modules/react-native/React/CoreModules/RCTDevMenu.mm
index 6d47652..7024e3e 100644
--- a/node_modules/react-native/React/CoreModules/RCTDevMenu.mm
+++ b/node_modules/react-native/React/CoreModules/RCTDevMenu.mm
@@ -7,7 +7,7 @@
 
 #import <React/RCTDevMenu.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTBridge+Private.h>
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTDefines.h>
diff --git a/node_modules/react-native/React/CoreModules/RCTDevSettings.mm b/node_modules/react-native/React/CoreModules/RCTDevSettings.mm
index 837865b..39c9089 100644
--- a/node_modules/react-native/React/CoreModules/RCTDevSettings.mm
+++ b/node_modules/react-native/React/CoreModules/RCTDevSettings.mm
@@ -9,7 +9,7 @@
 
 #import <objc/runtime.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTBridge+Private.h>
 #import <React/RCTBridgeModule.h>
 #import <React/RCTDevMenu.h>
diff --git a/node_modules/react-native/React/CoreModules/RCTDevSplitBundleLoader.mm b/node_modules/react-native/React/CoreModules/RCTDevSplitBundleLoader.mm
index 8eb756d..27d2edb 100644
--- a/node_modules/react-native/React/CoreModules/RCTDevSplitBundleLoader.mm
+++ b/node_modules/react-native/React/CoreModules/RCTDevSplitBundleLoader.mm
@@ -7,7 +7,7 @@
 
 #import <React/RCTDevSplitBundleLoader.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTBridge.h>
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTConvert.h>
diff --git a/node_modules/react-native/React/CoreModules/RCTDeviceInfo.mm b/node_modules/react-native/React/CoreModules/RCTDeviceInfo.mm
index b948e8e..03f3e57 100644
--- a/node_modules/react-native/React/CoreModules/RCTDeviceInfo.mm
+++ b/node_modules/react-native/React/CoreModules/RCTDeviceInfo.mm
@@ -7,7 +7,7 @@
 
 #import "RCTDeviceInfo.h"
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTAccessibilityManager.h>
 #import <React/RCTAssert.h>
 #import <React/RCTConstants.h>
diff --git a/node_modules/react-native/React/CoreModules/RCTExceptionsManager.mm b/node_modules/react-native/React/CoreModules/RCTExceptionsManager.mm
index ca1aafc..b3300d5 100644
--- a/node_modules/react-native/React/CoreModules/RCTExceptionsManager.mm
+++ b/node_modules/react-native/React/CoreModules/RCTExceptionsManager.mm
@@ -7,7 +7,7 @@
 
 #import "RCTExceptionsManager.h"
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTConvert.h>
 #import <React/RCTDefines.h>
 #import <React/RCTLog.h>
diff --git a/node_modules/react-native/React/CoreModules/RCTI18nManager.mm b/node_modules/react-native/React/CoreModules/RCTI18nManager.mm
index 7d3b9ea..dc48582 100644
--- a/node_modules/react-native/React/CoreModules/RCTI18nManager.mm
+++ b/node_modules/react-native/React/CoreModules/RCTI18nManager.mm
@@ -5,7 +5,7 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 
 #import <React/RCTI18nUtil.h>
 #import "RCTI18nManager.h"
diff --git a/node_modules/react-native/React/CoreModules/RCTKeyboardObserver.mm b/node_modules/react-native/React/CoreModules/RCTKeyboardObserver.mm
index ce483dd..df4ab97 100644
--- a/node_modules/react-native/React/CoreModules/RCTKeyboardObserver.mm
+++ b/node_modules/react-native/React/CoreModules/RCTKeyboardObserver.mm
@@ -7,7 +7,7 @@
 
 #import "RCTKeyboardObserver.h"
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTEventDispatcherProtocol.h>
 
 #import "CoreModulesPlugins.h"
diff --git a/node_modules/react-native/React/CoreModules/RCTLogBox.mm b/node_modules/react-native/React/CoreModules/RCTLogBox.mm
index d8113e9..b99d760 100644
--- a/node_modules/react-native/React/CoreModules/RCTLogBox.mm
+++ b/node_modules/react-native/React/CoreModules/RCTLogBox.mm
@@ -7,7 +7,7 @@
 
 #import "RCTLogBox.h"
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTBridge.h>
 #import <React/RCTBridgeModule.h>
 #import <React/RCTLog.h>
diff --git a/node_modules/react-native/React/CoreModules/RCTPlatform.mm b/node_modules/react-native/React/CoreModules/RCTPlatform.mm
index bf0fed1..fb1ea54 100644
--- a/node_modules/react-native/React/CoreModules/RCTPlatform.mm
+++ b/node_modules/react-native/React/CoreModules/RCTPlatform.mm
@@ -9,7 +9,7 @@
 
 #import <UIKit/UIKit.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTUtils.h>
 #import <React/RCTVersion.h>
 
diff --git a/node_modules/react-native/React/CoreModules/RCTRedBox.mm b/node_modules/react-native/React/CoreModules/RCTRedBox.mm
index 4d86309..792738a 100644
--- a/node_modules/react-native/React/CoreModules/RCTRedBox.mm
+++ b/node_modules/react-native/React/CoreModules/RCTRedBox.mm
@@ -7,7 +7,7 @@
 
 #import "RCTRedBox.h"
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTBridge.h>
 #import <React/RCTConvert.h>
 #import <React/RCTDefines.h>
diff --git a/node_modules/react-native/React/CoreModules/RCTSourceCode.mm b/node_modules/react-native/React/CoreModules/RCTSourceCode.mm
index 2589b34..6a8aa9b 100644
--- a/node_modules/react-native/React/CoreModules/RCTSourceCode.mm
+++ b/node_modules/react-native/React/CoreModules/RCTSourceCode.mm
@@ -7,7 +7,7 @@
 
 #import "RCTSourceCode.h"
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 
 #import <React/RCTBridge.h>
 
diff --git a/node_modules/react-native/React/CoreModules/RCTStatusBarManager.mm b/node_modules/react-native/React/CoreModules/RCTStatusBarManager.mm
index 19d1d8f..0ce1614 100644
--- a/node_modules/react-native/React/CoreModules/RCTStatusBarManager.mm
+++ b/node_modules/react-native/React/CoreModules/RCTStatusBarManager.mm
@@ -12,7 +12,7 @@
 #import <React/RCTLog.h>
 #import <React/RCTUtils.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 
 @implementation RCTConvert (UIStatusBar)
 
diff --git a/node_modules/react-native/React/CoreModules/RCTTiming.mm b/node_modules/react-native/React/CoreModules/RCTTiming.mm
index 13d0d57..1587c62 100644
--- a/node_modules/react-native/React/CoreModules/RCTTiming.mm
+++ b/node_modules/react-native/React/CoreModules/RCTTiming.mm
@@ -7,7 +7,7 @@
 
 #import "RCTTiming.h"
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 
 #import <React/RCTAssert.h>
 #import <React/RCTBridge+Private.h>
diff --git a/node_modules/react-native/React/CoreModules/RCTWebSocketModule.mm b/node_modules/react-native/React/CoreModules/RCTWebSocketModule.mm
index c099328..3f8907e 100644
--- a/node_modules/react-native/React/CoreModules/RCTWebSocketModule.mm
+++ b/node_modules/react-native/React/CoreModules/RCTWebSocketModule.mm
@@ -9,7 +9,7 @@
 
 #import <objc/runtime.h>
 
-#import <FBReactNativeSpec/FBReactNativeSpec.h>
+#import <ReactCodegen/FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTConvert.h>
 #import <React/RCTSRWebSocket.h>
 #import <React/RCTUtils.h>
diff --git a/node_modules/react-native/React/CoreModules/React-CoreModules.podspec b/node_modules/react-native/React/CoreModules/React-CoreModules.podspec
index e3c55c0..216ffa8 100644
--- a/node_modules/react-native/React/CoreModules/React-CoreModules.podspec
+++ b/node_modules/react-native/React/CoreModules/React-CoreModules.podspec
@@ -34,10 +34,10 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++14",
-                               "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/React/CoreModules\" \"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\""
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/React/CoreModules\" \"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/ReactCodegen/react/renderer/components\""
                              }
 
-  s.dependency "React-Codegen", version
+  s.dependency "ReactCodegen", version
   s.dependency "RCT-Folly", folly_version
   s.dependency "RCTTypeSafety", version
   s.dependency "React-Core/CoreModulesHeaders", version
diff --git a/node_modules/react-native/React/React-RCTFabric.podspec b/node_modules/react-native/React/React-RCTFabric.podspec
index fb7c850..ffd55a2 100644
--- a/node_modules/react-native/React/React-RCTFabric.podspec
+++ b/node_modules/react-native/React/React-RCTFabric.podspec
@@ -36,7 +36,7 @@ Pod::Spec.new do |s|
   s.compiler_flags         = folly_compiler_flags + ' ' + boost_compiler_flags
   s.header_dir             = "React"
   s.framework              = "JavaScriptCore"
-  s.pod_target_xcconfig    = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/DoubleConversion\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/Headers/Private/React-Core\" \"$(PODS_ROOT)/Headers/Public/React-Codegen\"" }
+  s.pod_target_xcconfig    = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/DoubleConversion\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/Headers/Private/React-Core\" \"$(PODS_ROOT)/Headers/Public/ReactCodegen\"" }
   s.xcconfig               = { "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/glog\" \"$(PODS_ROOT)/RCT-Folly\"",
                                "OTHER_CFLAGS" => "$(inherited) -DRN_FABRIC_ENABLED" + " " + folly_flags  }
 
diff --git a/node_modules/react-native/scripts/react_native_pods.rb b/node_modules/react-native/scripts/react_native_pods.rb
index f751862..0203254 100644
--- a/node_modules/react-native/scripts/react_native_pods.rb
+++ b/node_modules/react-native/scripts/react_native_pods.rb
@@ -95,7 +95,7 @@ def use_react_native! (options={})
     generate_react_codegen_podspec!(react_codegen_spec)
   end
 
-  pod 'React-Codegen', :path => $CODEGEN_OUTPUT_DIR
+  pod 'ReactCodegen', :path => $CODEGEN_OUTPUT_DIR
 
   if fabric_enabled
     checkAndGenerateEmptyThirdPartyProvider!(prefix)
@@ -343,7 +343,7 @@ def get_react_codegen_spec(options={})
   boost_compiler_flags = '-Wno-documentation'
 
   spec = {
-    'name' => "React-Codegen",
+    'name' => "ReactCodegen",
     'version' => version,
     'summary' => 'Temp pod for generated files for React Native',
     'homepage' => 'https://facebook.com/',
@@ -360,7 +360,7 @@ def get_react_codegen_spec(options={})
       [
         "\"$(PODS_ROOT)/boost\"",
         "\"$(PODS_ROOT)/RCT-Folly\"",
-        "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
+        "\"${PODS_ROOT}/Headers/Public/ReactCodegen/react/renderer/components\"",
         "\"$(PODS_ROOT)/Headers/Private/React-Fabric\"",
         "\"$(PODS_ROOT)/Headers/Private/React-RCTFabric\"",
       ].join(' ')
@@ -385,7 +385,7 @@ def get_react_codegen_spec(options={})
   end
 
   if script_phases
-    Pod::UI.puts "[Codegen] Adding script_phases to React-Codegen."
+    Pod::UI.puts "[Codegen] Adding script_phases to ReactCodegen."
     spec[:'script_phases'] = script_phases
   end
 
@@ -466,14 +466,14 @@ def generate_react_codegen_podspec!(spec)
   # This podspec file should only be create once in the session/pod install.
   # This happens when multiple targets are calling use_react_native!.
   if has_react_codegen_podspec_generated()
-    Pod::UI.puts "[Codegen] Skipping React-Codegen podspec generation."
+    Pod::UI.puts "[Codegen] Skipping ReactCodegen podspec generation."
     return
   end
   relative_installation_root = Pod::Config.instance.installation_root.relative_path_from(Pathname.pwd)
   output_dir = "#{relative_installation_root}/#{$CODEGEN_OUTPUT_DIR}"
   Pod::Executable.execute_command("mkdir", ["-p", output_dir]);
 
-  podspec_path = File.join(output_dir, 'React-Codegen.podspec.json')
+  podspec_path = File.join(output_dir, 'ReactCodegen.podspec.json')
   Pod::UI.puts "[Codegen] Generating #{podspec_path}"
 
   File.open(podspec_path, 'w') do |f|
@@ -510,7 +510,7 @@ def use_react_native_codegen_discovery!(options={})
     exit 1
   end
 
-  # Generate React-Codegen podspec here to add the script phases.
+  # Generate ReactCodegen podspec here to add the script phases.
   script_phases = get_react_codegen_script_phases(options)
   react_codegen_spec = get_react_codegen_spec(fabric_enabled: fabric_enabled, script_phases: script_phases)
   generate_react_codegen_podspec!(react_codegen_spec)
diff --git a/node_modules/react-native/scripts/react_native_pods.rb.orig b/node_modules/react-native/scripts/react_native_pods.rb.orig
new file mode 100644
index 0000000..f751862
--- /dev/null
+++ b/node_modules/react-native/scripts/react_native_pods.rb.orig
@@ -0,0 +1,651 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+require 'pathname'
+require_relative './react_native_pods_utils/script_phases.rb'
+
+$CODEGEN_OUTPUT_DIR = 'build/generated/ios'
+$CODEGEN_COMPONENT_DIR = 'react/renderer/components'
+$CODEGEN_MODULE_DIR = '.'
+$REACT_CODEGEN_PODSPEC_GENERATED = false
+$REACT_CODEGEN_DISCOVERY_DONE = false
+DEFAULT_OTHER_CPLUSPLUSFLAGS = '$(inherited)'
+NEW_ARCH_OTHER_CPLUSPLUSFLAGS = '$(inherited) -DRCT_NEW_ARCH_ENABLED=1 -DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1'
+
+def use_react_native! (options={})
+  # The prefix to react-native
+  prefix = options[:path] ||= "../node_modules/react-native"
+
+  # Include Fabric dependencies
+  fabric_enabled = options[:fabric_enabled] ||= false
+
+  # Include DevSupport dependency
+  production = options[:production] ||= false
+
+  # Include Hermes dependencies
+  hermes_enabled = options[:hermes_enabled] ||= false
+
+  # Codegen Discovery is required when enabling new architecture.
+  if ENV['RCT_NEW_ARCH_ENABLED'] == '1'
+    Pod::UI.puts 'Setting USE_CODEGEN_DISCOVERY=1'
+    ENV['USE_CODEGEN_DISCOVERY'] = '1'
+  end
+
+  if `/usr/sbin/sysctl -n hw.optional.arm64 2>&1`.to_i == 1 && !RUBY_PLATFORM.include?('arm64')
+    Pod::UI.warn 'Do not use "pod install" from inside Rosetta2 (x86_64 emulation on arm64).'
+    Pod::UI.warn ' - Emulated x86_64 is slower than native arm64'
+    Pod::UI.warn ' - May result in mixed architectures in rubygems (eg: ffi_c.bundle files may be x86_64 with an arm64 interpreter)'
+    Pod::UI.warn 'Run "env /usr/bin/arch -arm64 /bin/bash --login" then try again.'
+  end
+
+  # The Pods which should be included in all projects
+  pod 'FBLazyVector', :path => "#{prefix}/Libraries/FBLazyVector"
+  pod 'FBReactNativeSpec', :path => "#{prefix}/React/FBReactNativeSpec"
+  pod 'RCTRequired', :path => "#{prefix}/Libraries/RCTRequired"
+  pod 'RCTTypeSafety', :path => "#{prefix}/Libraries/TypeSafety"
+  pod 'React', :path => "#{prefix}/"
+  pod 'React-Core', :path => "#{prefix}/"
+  pod 'React-CoreModules', :path => "#{prefix}/React/CoreModules"
+  pod 'React-RCTActionSheet', :path => "#{prefix}/Libraries/ActionSheetIOS"
+  pod 'React-RCTAnimation', :path => "#{prefix}/Libraries/NativeAnimation"
+  pod 'React-RCTBlob', :path => "#{prefix}/Libraries/Blob"
+  pod 'React-RCTImage', :path => "#{prefix}/Libraries/Image"
+  pod 'React-RCTLinking', :path => "#{prefix}/Libraries/LinkingIOS"
+  pod 'React-RCTNetwork', :path => "#{prefix}/Libraries/Network"
+  pod 'React-RCTSettings', :path => "#{prefix}/Libraries/Settings"
+  pod 'React-RCTText', :path => "#{prefix}/Libraries/Text"
+  pod 'React-RCTVibration', :path => "#{prefix}/Libraries/Vibration"
+  pod 'React-Core/RCTWebSocket', :path => "#{prefix}/"
+
+  unless production
+    pod 'React-Core/DevSupport', :path => "#{prefix}/"
+  end
+
+  pod 'React-cxxreact', :path => "#{prefix}/ReactCommon/cxxreact"
+  pod 'React-jsi', :path => "#{prefix}/ReactCommon/jsi"
+  pod 'React-jsiexecutor', :path => "#{prefix}/ReactCommon/jsiexecutor"
+  pod 'React-jsinspector', :path => "#{prefix}/ReactCommon/jsinspector"
+  pod 'React-callinvoker', :path => "#{prefix}/ReactCommon/callinvoker"
+  pod 'React-runtimeexecutor', :path => "#{prefix}/ReactCommon/runtimeexecutor"
+  pod 'React-perflogger', :path => "#{prefix}/ReactCommon/reactperflogger"
+  pod 'React-logger', :path => "#{prefix}/ReactCommon/logger"
+  pod 'ReactCommon/turbomodule/core', :path => "#{prefix}/ReactCommon"
+  pod 'Yoga', :path => "#{prefix}/ReactCommon/yoga", :modular_headers => true
+
+  pod 'DoubleConversion', :podspec => "#{prefix}/third-party-podspecs/DoubleConversion.podspec"
+  pod 'glog', :podspec => "#{prefix}/third-party-podspecs/glog.podspec"
+  pod 'boost', :podspec => "#{prefix}/third-party-podspecs/boost.podspec"
+  pod 'RCT-Folly', :podspec => "#{prefix}/third-party-podspecs/RCT-Folly.podspec"
+
+  if ENV['USE_CODEGEN_DISCOVERY'] == '1'
+    app_path = options[:app_path]
+    config_file_dir = options[:config_file_dir]
+    use_react_native_codegen_discovery!({
+      react_native_path: prefix,
+      app_path: app_path,
+      fabric_enabled: fabric_enabled,
+      config_file_dir: config_file_dir,
+    })
+  else
+    # Generate a podspec file for generated files.
+    # This gets generated in use_react_native_codegen_discovery when codegen discovery is enabled.
+    react_codegen_spec = get_react_codegen_spec(fabric_enabled: fabric_enabled)
+    generate_react_codegen_podspec!(react_codegen_spec)
+  end
+
+  pod 'React-Codegen', :path => $CODEGEN_OUTPUT_DIR
+
+  if fabric_enabled
+    checkAndGenerateEmptyThirdPartyProvider!(prefix)
+    pod 'React-Fabric', :path => "#{prefix}/ReactCommon"
+    pod 'React-rncore', :path => "#{prefix}/ReactCommon"
+    pod 'React-graphics', :path => "#{prefix}/ReactCommon/react/renderer/graphics"
+    pod 'React-jsi/Fabric', :path => "#{prefix}/ReactCommon/jsi"
+    pod 'React-RCTFabric', :path => "#{prefix}/React"
+    pod 'RCT-Folly/Fabric', :podspec => "#{prefix}/third-party-podspecs/RCT-Folly.podspec"
+  end
+
+  if hermes_enabled
+    pod 'React-hermes', :path => "#{prefix}/ReactCommon/hermes"
+    pod 'hermes-engine', '~> 0.11.0'
+    pod 'libevent', '~> 2.1.12'
+  end
+end
+
+def get_default_flags()
+  flags = {
+    :fabric_enabled => false,
+    :hermes_enabled => false,
+  }
+
+  if ENV['RCT_NEW_ARCH_ENABLED'] == '1'
+    flags[:fabric_enabled] = true
+    flags[:hermes_enabled] = true
+  end
+
+  return flags
+end
+
+def use_flipper!(versions = {}, configurations: ['Debug'])
+  versions['Flipper'] ||= '0.125.0'
+  versions['Flipper-Boost-iOSX'] ||= '1.76.0.1.11'
+  versions['Flipper-DoubleConversion'] ||= '3.1.7'
+  versions['Flipper-Fmt'] ||= '7.1.7'
+  versions['Flipper-Folly'] ||= '2.6.10'
+  versions['Flipper-Glog'] ||= '0.3.9'
+  versions['Flipper-PeerTalk'] ||= '0.0.4'
+  versions['Flipper-RSocket'] ||= '1.4.3'
+  versions['OpenSSL-Universal'] ||= '1.1.1100'
+  pod 'FlipperKit', versions['Flipper'], :configurations => configurations
+  pod 'FlipperKit/FlipperKitLayoutPlugin', versions['Flipper'], :configurations => configurations
+  pod 'FlipperKit/SKIOSNetworkPlugin', versions['Flipper'], :configurations => configurations
+  pod 'FlipperKit/FlipperKitUserDefaultsPlugin', versions['Flipper'], :configurations => configurations
+  pod 'FlipperKit/FlipperKitReactPlugin', versions['Flipper'], :configurations => configurations
+  # List all transitive dependencies for FlipperKit pods
+  # to avoid them being linked in Release builds
+  pod 'Flipper', versions['Flipper'], :configurations => configurations
+  pod 'Flipper-Boost-iOSX', versions['Flipper-Boost-iOSX'], :configurations => configurations
+  pod 'Flipper-DoubleConversion', versions['Flipper-DoubleConversion'], :configurations => configurations
+  pod 'Flipper-Fmt', versions['Flipper-Fmt'], :configurations => configurations
+  pod 'Flipper-Folly', versions['Flipper-Folly'], :configurations => configurations
+  pod 'Flipper-Glog', versions['Flipper-Glog'], :configurations => configurations
+  pod 'Flipper-PeerTalk', versions['Flipper-PeerTalk'], :configurations => configurations
+  pod 'Flipper-RSocket', versions['Flipper-RSocket'], :configurations => configurations
+  pod 'FlipperKit/Core', versions['Flipper'], :configurations => configurations
+  pod 'FlipperKit/CppBridge', versions['Flipper'], :configurations => configurations
+  pod 'FlipperKit/FBCxxFollyDynamicConvert', versions['Flipper'], :configurations => configurations
+  pod 'FlipperKit/FBDefines', versions['Flipper'], :configurations => configurations
+  pod 'FlipperKit/FKPortForwarding', versions['Flipper'], :configurations => configurations
+  pod 'FlipperKit/FlipperKitHighlightOverlay', versions['Flipper'], :configurations => configurations
+  pod 'FlipperKit/FlipperKitLayoutTextSearchable', versions['Flipper'], :configurations => configurations
+  pod 'FlipperKit/FlipperKitNetworkPlugin', versions['Flipper'], :configurations => configurations
+  pod 'OpenSSL-Universal', versions['OpenSSL-Universal'], :configurations => configurations
+end
+
+def has_pod(installer, name)
+  installer.pods_project.pod_group(name) != nil
+end
+
+# Post Install processing for Flipper
+def flipper_post_install(installer)
+  installer.pods_project.targets.each do |target|
+    if target.name == 'YogaKit'
+      target.build_configurations.each do |config|
+        config.build_settings['SWIFT_VERSION'] = '4.1'
+      end
+    end
+  end
+end
+
+def exclude_architectures(installer)
+  projects = installer.aggregate_targets
+    .map{ |t| t.user_project }
+    .uniq{ |p| p.path }
+    .push(installer.pods_project)
+
+  # Hermes does not support `i386` architecture
+  excluded_archs_default = has_pod(installer, 'hermes-engine') ? "i386" : ""
+
+  projects.each do |project|
+    project.build_configurations.each do |config|
+      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = excluded_archs_default
+    end
+
+    project.save()
+  end
+end
+
+def fix_library_search_paths(installer)
+  def fix_config(config)
+    lib_search_paths = config.build_settings["LIBRARY_SEARCH_PATHS"]
+    if lib_search_paths
+      if lib_search_paths.include?("$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)") || lib_search_paths.include?("\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"")
+        # $(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME) causes problem with Xcode 12.5 + arm64 (Apple M1)
+        # since the libraries there are only built for x86_64 and i386.
+        lib_search_paths.delete("$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)")
+        lib_search_paths.delete("\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"")
+        if !(lib_search_paths.include?("$(SDKROOT)/usr/lib/swift") || lib_search_paths.include?("\"$(SDKROOT)/usr/lib/swift\""))
+          # however, $(SDKROOT)/usr/lib/swift is required, at least if user is not running CocoaPods 1.11
+          lib_search_paths.insert(0, "$(SDKROOT)/usr/lib/swift")
+        end
+      end
+    end
+  end
+
+  projects = installer.aggregate_targets
+    .map{ |t| t.user_project }
+    .uniq{ |p| p.path }
+    .push(installer.pods_project)
+
+  projects.each do |project|
+    project.build_configurations.each do |config|
+      fix_config(config)
+    end
+    project.native_targets.each do |target|
+      target.build_configurations.each do |config|
+        fix_config(config)
+      end
+    end
+    project.save()
+  end
+end
+
+def react_native_post_install(installer)
+  if has_pod(installer, 'Flipper')
+    flipper_post_install(installer)
+  end
+
+  exclude_architectures(installer)
+  fix_library_search_paths(installer)
+
+  cpp_flags = DEFAULT_OTHER_CPLUSPLUSFLAGS
+  if ENV['RCT_NEW_ARCH_ENABLED'] == '1'
+    cpp_flags = NEW_ARCH_OTHER_CPLUSPLUSFLAGS
+  end
+  modify_flags_for_new_architecture(installer, cpp_flags)
+
+end
+
+def modify_flags_for_new_architecture(installer, cpp_flags)
+  # Add RCT_NEW_ARCH_ENABLED to Target pods xcconfig
+  installer.aggregate_targets.each do |aggregate_target|
+      aggregate_target.xcconfigs.each do |config_name, config_file|
+          config_file.attributes['OTHER_CPLUSPLUSFLAGS'] = cpp_flags
+          xcconfig_path = aggregate_target.xcconfig_path(config_name)
+          Pod::UI.puts xcconfig_path
+          config_file.save_as(xcconfig_path)
+      end
+  end
+  # Add RCT_NEW_ARCH_ENABLED to Pods project xcconfig
+  installer.pods_project.targets.each do |target|
+    # if target.name == 'React-Core'
+    if target.name == 'React-Core'
+      puts "#{target.name}"
+      target.build_configurations.each do |config|
+        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = cpp_flags
+      end
+    end
+  end
+end
+
+def build_codegen!(react_native_path)
+  codegen_repo_path = "#{react_native_path}/packages/react-native-codegen";
+  codegen_npm_path = "#{react_native_path}/../react-native-codegen";
+  codegen_cli_path = ""
+  if Dir.exist?(codegen_repo_path)
+    codegen_cli_path = codegen_repo_path
+  elsif Dir.exist?(codegen_npm_path)
+    codegen_cli_path = codegen_npm_path
+  else
+    raise "[codegen] Couldn't not find react-native-codegen."
+  end
+
+  if !Dir.exist?("#{codegen_cli_path}/lib")
+    Pod::UI.puts "[Codegen] building #{codegen_cli_path}."
+    system("#{codegen_cli_path}/scripts/oss/build.sh")
+  end
+end
+
+# This is a temporary supporting function until we enable use_react_native_codegen_discovery by default.
+def checkAndGenerateEmptyThirdPartyProvider!(react_native_path)
+  return if ENV['USE_CODEGEN_DISCOVERY'] == '1'
+
+  relative_installation_root = Pod::Config.instance.installation_root.relative_path_from(Pathname.pwd)
+  output_dir = "#{relative_installation_root}/#{$CODEGEN_OUTPUT_DIR}"
+
+  provider_h_path = "#{output_dir}/RCTThirdPartyFabricComponentsProvider.h"
+  provider_cpp_path ="#{output_dir}/RCTThirdPartyFabricComponentsProvider.cpp"
+
+  if(!File.exist?(provider_h_path) || !File.exist?(provider_cpp_path))
+    # build codegen
+    build_codegen!(react_native_path)
+
+    # Just use a temp empty schema list.
+    temp_schema_list_path = "#{output_dir}/tmpSchemaList.txt"
+    File.open(temp_schema_list_path, 'w') do |f|
+      f.write('[]')
+      f.fsync
+    end
+
+    Pod::UI.puts '[Codegen] generating an empty RCTThirdPartyFabricComponentsProvider'
+    Pod::Executable.execute_command(
+      'node',
+      [
+        "#{react_native_path}/scripts/generate-provider-cli.js",
+        "--platform", 'ios',
+        "--schemaListPath", temp_schema_list_path,
+        "--outputDir", "#{output_dir}"
+      ])
+    File.delete(temp_schema_list_path) if File.exist?(temp_schema_list_path)
+  end
+end
+
+def get_react_codegen_spec(options={})
+  fabric_enabled = options[:fabric_enabled] ||= false
+  script_phases = options[:script_phases] ||= nil
+
+  package = JSON.parse(File.read(File.join(__dir__, "..", "package.json")))
+  version = package['version']
+
+  source = { :git => 'https://github.com/facebook/react-native.git' }
+  if version == '1000.0.0'
+    # This is an unpublished version, use the latest commit hash of the react-native repo, which we’re presumably in.
+    source[:commit] = `git rev-parse HEAD`.strip if system("git rev-parse --git-dir > /dev/null 2>&1")
+  else
+    source[:tag] = "v#{version}"
+  end
+
+  folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
+  folly_version = '2021.06.28.00-v2'
+  boost_version = '1.76.0'
+  boost_compiler_flags = '-Wno-documentation'
+
+  spec = {
+    'name' => "React-Codegen",
+    'version' => version,
+    'summary' => 'Temp pod for generated files for React Native',
+    'homepage' => 'https://facebook.com/',
+    'license' => 'Unlicense',
+    'authors' => 'Facebook',
+    'compiler_flags'  => "#{folly_compiler_flags} #{boost_compiler_flags} -Wno-nullability-completeness",
+    'source' => { :git => '' },
+    'header_mappings_dir' => './',
+    'platforms' => {
+      'ios' => '11.0',
+    },
+    'source_files' => "**/*.{h,mm,cpp}",
+    'pod_target_xcconfig' => { "HEADER_SEARCH_PATHS" =>
+      [
+        "\"$(PODS_ROOT)/boost\"",
+        "\"$(PODS_ROOT)/RCT-Folly\"",
+        "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
+        "\"$(PODS_ROOT)/Headers/Private/React-Fabric\"",
+        "\"$(PODS_ROOT)/Headers/Private/React-RCTFabric\"",
+      ].join(' ')
+    },
+    'dependencies': {
+      "FBReactNativeSpec":  [version],
+      "React-jsiexecutor":  [version],
+      "RCT-Folly": [folly_version],
+      "RCTRequired": [version],
+      "RCTTypeSafety": [version],
+      "React-Core": [version],
+      "React-jsi": [version],
+      "ReactCommon/turbomodule/core": [version]
+    }
+  }
+
+  if fabric_enabled
+    spec[:'dependencies'].merge!({
+      'React-graphics': [version],
+      'React-rncore':  [version],
+    });
+  end
+
+  if script_phases
+    Pod::UI.puts "[Codegen] Adding script_phases to React-Codegen."
+    spec[:'script_phases'] = script_phases
+  end
+
+  return spec
+end
+
+def get_codegen_config_from_file(config_path, config_key)
+  empty = {'libraries' => []}
+  if !File.exist?(config_path)
+    return empty
+  end
+
+  config = JSON.parse(File.read(config_path))
+  return config[config_key] ? config[config_key] : empty
+end
+
+def get_react_codegen_script_phases(options={})
+  app_path = options[:app_path] ||= ''
+  if !app_path
+    Pod::UI.warn '[Codegen] error: app_path is requried to use codegen discovery.'
+    exit 1
+  end
+
+  # We need to convert paths to relative path from installation_root for the script phase for CI.
+  relative_app_root = Pathname.new(app_path).relative_path_from(Pod::Config.instance.installation_root)
+
+  config_file_dir = options[:config_file_dir] ||= ''
+  relative_config_file_dir = ''
+  if config_file_dir != ''
+    relative_config_file_dir = Pathname.new(config_file_dir).relative_path_from(Pod::Config.instance.installation_root)
+  end
+
+  fabric_enabled = options[:fabric_enabled] ||= false
+
+  # react_native_path should be relative already.
+  react_native_path = options[:react_native_path] ||= "../node_modules/react-native"
+
+  # Generate input files for in-app libaraies which will be used to check if the script needs to be run.
+  # TODO: Ideally, we generate the input_files list from generate-artifacts.js and read the result here.
+  #       Or, generate this podspec in generate-artifacts.js as well.
+  config_key = options[:config_key] ||= 'codegenConfig'
+  app_package_path = File.join(app_path, 'package.json')
+  app_codegen_config = get_codegen_config_from_file(app_package_path, config_key)
+  file_list = []
+  app_codegen_config['libraries'].each do |library|
+    library_dir = File.join(app_path, library['jsSrcsDir'])
+    file_list.concat (`find #{library_dir} -type f \\( -name "Native*.js" -or -name "*NativeComponent.js" \\)`.split("\n").sort)
+  end
+  input_files = file_list.map { |filename| "${PODS_ROOT}/../#{Pathname.new(filename).relative_path_from(Pod::Config.instance.installation_root)}" }
+
+  # Add a script phase to trigger generate artifact.
+  # Some code is duplicated so that it's easier to delete the old way and switch over to this once it's stabilized.
+  return {
+    'name': 'Generate Specs',
+    'execution_position': :before_compile,
+    'input_files' => input_files,
+    'show_env_vars_in_log': true,
+    'output_files': ["${DERIVED_FILE_DIR}/react-codegen.log"],
+    'script': get_script_phases_with_codegen_discovery(
+      react_native_path: react_native_path,
+      relative_app_root: relative_app_root,
+      relative_config_file_dir: relative_config_file_dir,
+      fabric_enabled: fabric_enabled
+    ),
+  }
+
+end
+
+def set_react_codegen_podspec_generated(value)
+  $REACT_CODEGEN_PODSPEC_GENERATED = value
+end
+
+def has_react_codegen_podspec_generated()
+  return $REACT_CODEGEN_PODSPEC_GENERATED
+end
+
+def generate_react_codegen_podspec!(spec)
+  # This podspec file should only be create once in the session/pod install.
+  # This happens when multiple targets are calling use_react_native!.
+  if has_react_codegen_podspec_generated()
+    Pod::UI.puts "[Codegen] Skipping React-Codegen podspec generation."
+    return
+  end
+  relative_installation_root = Pod::Config.instance.installation_root.relative_path_from(Pathname.pwd)
+  output_dir = "#{relative_installation_root}/#{$CODEGEN_OUTPUT_DIR}"
+  Pod::Executable.execute_command("mkdir", ["-p", output_dir]);
+
+  podspec_path = File.join(output_dir, 'React-Codegen.podspec.json')
+  Pod::UI.puts "[Codegen] Generating #{podspec_path}"
+
+  File.open(podspec_path, 'w') do |f|
+    f.write(spec.to_json)
+    f.fsync
+  end
+
+  set_react_codegen_podspec_generated(true)
+
+  return {
+    "spec" => spec,
+    "path" => $CODEGEN_OUTPUT_DIR,  # Path needs to be relative to `Podfile`
+  }
+end
+
+
+def use_react_native_codegen_discovery!(options={})
+  return if ENV['DISABLE_CODEGEN'] == '1'
+
+  if $REACT_CODEGEN_DISCOVERY_DONE
+    Pod::UI.puts "[Codegen] Skipping use_react_native_codegen_discovery."
+    return
+  end
+
+  Pod::UI.warn '[Codegen] warn: using experimental new codegen integration'
+  react_native_path = options[:react_native_path] ||= "../node_modules/react-native"
+  app_path = options[:app_path]
+  fabric_enabled = options[:fabric_enabled] ||= false
+  config_file_dir = options[:config_file_dir] ||= ''
+
+  if !app_path
+    Pod::UI.warn '[Codegen] Error: app_path is required for use_react_native_codegen_discovery.'
+    Pod::UI.warn '[Codegen] If you are calling use_react_native_codegen_discovery! in your Podfile, please remove the call and pass `app_path` and/or `config_file_dir` to `use_react_native!`.'
+    exit 1
+  end
+
+  # Generate React-Codegen podspec here to add the script phases.
+  script_phases = get_react_codegen_script_phases(options)
+  react_codegen_spec = get_react_codegen_spec(fabric_enabled: fabric_enabled, script_phases: script_phases)
+  generate_react_codegen_podspec!(react_codegen_spec)
+
+  out = Pod::Executable.execute_command(
+    'node',
+    [
+      "#{react_native_path}/scripts/generate-artifacts.js",
+      "-p", "#{app_path}",
+      "-o", Pod::Config.instance.installation_root,
+      "-e", "#{fabric_enabled}",
+      "-c", "#{config_file_dir}",
+    ])
+  Pod::UI.puts out;
+
+  $REACT_CODEGEN_DISCOVERY_DONE = true
+end
+
+def use_react_native_codegen!(spec, options={})
+  return if ENV['USE_CODEGEN_DISCOVERY'] == '1'
+  # TODO: Once the new codegen approach is ready for use, we should output a warning here to let folks know to migrate.
+
+  # The prefix to react-native
+  react_native_path = options[:react_native_path] ||= "../.."
+
+  # Library name (e.g. FBReactNativeSpec)
+  library_name = options[:library_name] ||= "#{spec.name.gsub('_','-').split('-').collect(&:capitalize).join}Spec"
+  Pod::UI.puts "[Codegen] Found #{library_name}"
+
+  output_dir = options[:output_dir] ||= $CODEGEN_OUTPUT_DIR
+  output_dir_module = "#{output_dir}/#{$CODEGEN_MODULE_DIR}"
+  output_dir_component = "#{output_dir}/#{$CODEGEN_COMPONENT_DIR}"
+
+  codegen_config = {
+    "modules" => {
+      :js_srcs_pattern => "Native*.js",
+      :generated_dir => "#{Pod::Config.instance.installation_root}/#{output_dir_module}/#{library_name}",
+      :generated_files => [
+        "#{library_name}.h",
+        "#{library_name}-generated.mm"
+      ]
+    },
+    "components" => {
+      :js_srcs_pattern => "*NativeComponent.js",
+      :generated_dir => "#{Pod::Config.instance.installation_root}/#{output_dir_component}/#{library_name}",
+      :generated_files => [
+        "ComponentDescriptors.h",
+        "EventEmitters.cpp",
+        "EventEmitters.h",
+        "Props.cpp",
+        "Props.h",
+        "RCTComponentViewHelpers.h",
+        "ShadowNodes.cpp",
+        "ShadowNodes.h"
+      ]
+    }
+  }
+
+  # The path to JavaScript files
+  js_srcs_dir = options[:js_srcs_dir] ||= "./"
+  library_type = options[:library_type]
+
+  if library_type
+    if !codegen_config[library_type]
+      raise "[Codegen] invalid library_type: #{library_type}. Check your podspec to make sure it's set to 'modules' or 'components'. Removing the option will generate files for both"
+    end
+    js_srcs_pattern = codegen_config[library_type][:js_srcs_pattern]
+  end
+
+  if library_type
+    generated_dirs = [ codegen_config[library_type][:generated_dir] ]
+    generated_files = codegen_config[library_type][:generated_files].map { |filename| "#{codegen_config[library_type][:generated_dir]}/#{filename}" }
+  else
+    generated_dirs = [ codegen_config["modules"][:generated_dir], codegen_config["components"][:generated_dir] ]
+    generated_files = codegen_config["modules"][:generated_files].map { |filename| "#{codegen_config["modules"][:generated_dir]}/#{filename}" }
+    generated_files = generated_files.concat(codegen_config["components"][:generated_files].map { |filename| "#{codegen_config["components"][:generated_dir]}/#{filename}" })
+  end
+
+  if js_srcs_pattern
+    file_list = `find #{js_srcs_dir} -type f -name #{js_srcs_pattern}`.split("\n").sort
+    input_files = file_list.map { |filename| "${PODS_TARGET_SRCROOT}/#{filename}" }
+  else
+    input_files = [ js_srcs_dir ]
+  end
+
+  # Prepare filesystem by creating empty files that will be picked up as references by CocoaPods.
+  prepare_command = "mkdir -p #{generated_dirs.join(" ")} && touch -a #{generated_files.join(" ")}"
+  system(prepare_command) # Always run prepare_command when a podspec uses the codegen, as CocoaPods may skip invoking this command in certain scenarios. Replace with pre_integrate_hook after updating to CocoaPods 1.11
+  spec.prepare_command = prepare_command
+
+  spec.script_phase = {
+    :name => 'Generate Specs',
+    :input_files => input_files, # This also needs to be relative to Xcode
+    :output_files => ["${DERIVED_FILE_DIR}/codegen-#{library_name}.log"].concat(generated_files.map { |filename| " ${PODS_TARGET_SRCROOT}/#{filename}"} ),
+    # The final generated files will be created when this script is invoked at Xcode build time.
+    :script => get_script_phases_no_codegen_discovery(
+      react_native_path: react_native_path,
+      codegen_output_dir: $CODEGEN_OUTPUT_DIR,
+      codegen_module_dir: $CODEGEN_MODULE_DIR,
+      codegen_component_dir: $CODEGEN_COMPONENT_DIR,
+      library_name: library_name,
+      library_type: library_type,
+      js_srcs_pattern: js_srcs_pattern,
+      js_srcs_dir: js_srcs_dir,
+      file_list: file_list
+    ),
+    :execution_position => :before_compile,
+    :show_env_vars_in_log => true
+  }
+end
+
+# This provides a post_install workaround for build issues related Xcode 12.5 and Apple Silicon (M1) machines.
+# Call this in the app's main Podfile's post_install hook.
+# See https://github.com/facebook/react-native/issues/31480#issuecomment-902912841 for more context.
+# Actual fix was authored by https://github.com/mikehardy.
+# New app template will call this for now until the underlying issue is resolved.
+def __apply_Xcode_12_5_M1_post_install_workaround(installer)
+  # Flipper podspecs are still targeting an older iOS deployment target, and may cause an error like:
+  #   "error: thread-local storage is not supported for the current target"
+  # The most reliable known workaround is to bump iOS deployment target to match react-native (iOS 11 now).
+  installer.pods_project.targets.each do |target|
+    target.build_configurations.each do |config|
+      # ensure IPHONEOS_DEPLOYMENT_TARGET is at least 11.0
+      deployment_target = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'].to_f
+      should_upgrade = deployment_target < 11.0 && deployment_target != 0.0
+      if should_upgrade
+        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
+      end
+    end
+  end
+
+  # But... doing so caused another issue in Flipper:
+  #   "Time.h:52:17: error: typedef redefinition with different types"
+  # We need to make a patch to RCT-Folly - remove the `__IPHONE_OS_VERSION_MIN_REQUIRED` check.
+  # See https://github.com/facebook/flipper/issues/834 for more details.
+  time_header = "#{Pod::Config.instance.installation_root.to_s}/Pods/RCT-Folly/folly/portability/Time.h"
+  `sed -i -e  $'s/ && (__IPHONE_OS_VERSION_MIN_REQUIRED < __IPHONE_10_0)//' #{time_header}`
+end
